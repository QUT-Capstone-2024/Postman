{
  "info": {
    "_postman_id": "aad05b8f-849f-42ff-9a25-6eef67c2088a",
    "name": "Profile_Access",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "34815913"
  },
  "item": [
    {
      "name": "Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test to check if the status code is 200 (success)",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Parse the JSON response body",
              "var jsonData = pm.response.json();",
              "",
              "// Test to check if the token field is present in the response",
              "pm.test(\"Token is present in the response\", function () {",
              "    pm.expect(jsonData).to.have.property(\"token\");",
              "    pm.environment.set(\"userToken\", jsonData.token);",
              "    pm.environment.set(\"ownUserId\", jsonData.id);",
              "});",
              "",
              "// Get the email sent in the request",
              "var requestEmail;",
              "if (pm.request.body.mode === 'raw') {",
              "    // If the body is raw JSON, parse it and get the email",
              "    requestEmail = JSON.parse(pm.request.body.raw).email;",
              "}",
              "",
              "// Test to check if the email matches the one sent in the request",
              "pm.test(\"Email matches the one sent\", function () {",
              "    pm.expect(jsonData.email).to.eql(requestEmail);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/auth/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "auth",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Own profile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains user details\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property(\"email\");",
              "    pm.expect(jsonData).to.have.property(\"name\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{userToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/users/{{ownUserId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "users",
            "{{ownUserId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Another users profile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 403\", function () {",
              "    pm.response.to.have.status(403);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{userToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/users/{{userId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "users",
            "{{userId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Login(Admin)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test to check if the status code is 200 (success)",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Parse the JSON response body",
              "var jsonData = pm.response.json();",
              "",
              "// Test to check if the token field is present in the response",
              "pm.test(\"Token is present in the response\", function () {",
              "    pm.expect(jsonData).to.have.property(\"token\");",
              "    pm.environment.set(\"adminToken\", jsonData.token);",
              "});",
              "",
              "// Get the email sent in the request",
              "var requestEmail;",
              "if (pm.request.body.mode === 'raw') {",
              "    // If the body is raw JSON, parse it and get the email",
              "    requestEmail = JSON.parse(pm.request.body.raw).email;",
              "}",
              "",
              "// Test to check if the email matches the one sent in the request",
              "pm.test(\"Email matches the one sent\", function () {",
              "    pm.expect(jsonData.email).to.eql(requestEmail);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/auth/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "auth",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Another users profile (admin)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response contains user details\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property(\"email\");",
              "    pm.expect(jsonData).to.have.property(\"name\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{adminToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:8080/api/users/{{userId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "8080",
          "path": [
            "api",
            "users",
            "{{userId}}"
          ]
        }
      },
      "response": []
    }
  ],
  "auth": {
    "type": "noauth"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}
